''' Camera params of KITTI

Author: Xingyu Liu
Date: Dec 2019
'''

import numpy as np

R_rect_00 = {}
P_rect_00 = {}
P_rect_01 = {}
P_rect_02 = {}
P_rect_03 = {}
Tr_velo_to_cam = {}
R_cam_to_rect = {}
P_velo_to_img = {}
baseline = {}
focal_length = {}




# 2011_09_26

# 3x4 projection matrix after rectification
P_rect_00_2011_09_26 = np.array(
        [ [ 721.5377,   0,          609.5593,       0],
          [ 0,          721.5377,   172.8540,       0],
          [ 0,          0,          1.0000,         0] ])
P_rect_00['2011_09_26'] = P_rect_00_2011_09_26

P_rect_01_2011_09_26 = np.array(
        [ [ 721.5377,   0,          609.5593,       -387.5744],
          [ 0,          721.5377,   172.8540,       0],
          [ 0,          0,          1.0000,         0] ])
P_rect_01['2011_09_26'] = P_rect_01_2011_09_26

P_rect_02_2011_09_26 = np.array(
        [ [ 721.5377,   0,          609.5593,       44.85728],
          [ 0,          721.5377,   172.8540,       0.2163791],
          [ 0,          0,          1.0000,         0.002745884] ])
P_rect_02['2011_09_26'] = P_rect_02_2011_09_26

P_rect_03_2011_09_26 = np.array(
        [ [ 721.5377,   0,          609.5593,       -339.5242],
          [ 0,          721.5377,   172.8540,       2.199936],
          [ 0,          0,          1.0000,         0.002729905] ])
P_rect_03['2011_09_26'] = P_rect_03_2011_09_26

# 3x3 rectifying rotation to make image planes co-planar
R_rect_00_2011_09_26 = np.array(
        [ [  0.999923900000000,    0.009837760000000,     -0.007445048000000],
          [ -0.009869795000000,    0.999942100000000,     -0.004278459000000],
          [  0.007402527000000,    0.004351614000000,     0.999963100000000] ])
R_rect_00['2011_09_26'] = R_rect_00_2011_09_26

# velodyne to cam
Tr_velo_to_cam_2011_09_26 = np.array(
        [ [ 0.007533745000000,  -0.999971400000000, -0.000616602000000,   -0.004069766000000],
          [ 0.014802490000000,  0.000728073300000,  -0.999890200000000,   -0.076316180000000],
          [ 0.999862100000000,  0.007523790000000,  0.014807550000000,  -0.271780600000000],
          [ 0.,  0.,  0.,  1.0] ])
Tr_velo_to_cam['2011_09_26'] = Tr_velo_to_cam_2011_09_26

R_cam_to_rect_2011_09_26 = np.eye(4)
R_cam_to_rect_2011_09_26[:3, :3] = R_rect_00['2011_09_26']
R_cam_to_rect['2011_09_26'] = R_cam_to_rect_2011_09_26

P_velo_to_img_2011_09_26 = np.dot(np.dot(P_rect_02['2011_09_26'], R_cam_to_rect['2011_09_26']), Tr_velo_to_cam['2011_09_26'])
P_velo_to_img['2011_09_26'] = P_velo_to_img_2011_09_26

focal_length['2011_09_26'] = 721.5377

baseline_2011_09_26 = (P_rect_02['2011_09_26'][0,3] - \
            P_rect_03['2011_09_26'][0,3] + \
            P_rect_02['2011_09_26'][1,3] - \
            P_rect_03['2011_09_26'][1,3]) / P_rect_02['2011_09_26'][0,0]
baseline['2011_09_26'] = baseline_2011_09_26




# 2011_09_28

# 3x4 projection matrix after rectification
P_rect_00_2011_09_28 = np.array(
        [ [ 7.070493e+02, 0.000000e+00, 6.040814e+02, 0.000000e+00],
          [ 0.000000e+00, 7.070493e+02, 1.805066e+02, 0.000000e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00] ])
P_rect_00['2011_09_28'] = P_rect_00_2011_09_28

P_rect_01_2011_09_28 = np.array(
        [ [ 7.070493e+02, 0.000000e+00, 6.040814e+02, -3.797842e+02],
          [ 0.000000e+00, 7.070493e+02, 1.805066e+02, 0.000000e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00] ])
P_rect_01['2011_09_28'] = P_rect_01_2011_09_28

P_rect_02_2011_09_28 = np.array(
        [ [ 7.070493e+02, 0.000000e+00, 6.040814e+02, 4.575831e+01],
          [ 0.000000e+00, 7.070493e+02, 1.805066e+02, -3.454157e-01],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 4.981016e-03] ])
P_rect_02['2011_09_28'] = P_rect_02_2011_09_28

P_rect_03_2011_09_28 = np.array(
        [ [ 7.070493e+02, 0.000000e+00, 6.040814e+02, -3.341081e+02],
          [ 0.000000e+00, 7.070493e+02, 1.805066e+02, 2.330660e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 3.201153e-03] ])
P_rect_03['2011_09_28'] = P_rect_03_2011_09_28

# 3x3 rectifying rotation to make image planes co-planar
R_rect_00_2011_09_28 = np.array(
        [ [  9.999128e-01, 1.009263e-02, -8.511932e-03],
          [ -1.012729e-02, 9.999406e-01, -4.037671e-03],
          [  8.470675e-03, 4.123522e-03, 9.999556e-01] ])
R_rect_00['2011_09_28'] = R_rect_00_2011_09_28

# velodyne to cam
Tr_velo_to_cam_2011_09_28 = np.array(
        [ [ 6.927964e-03, -9.999722e-01, -2.757829e-03, -2.457729e-02],
          [ -1.162982e-03, 2.749836e-03, -9.999955e-01, -6.127237e-02],
          [ 9.999753e-01,  6.931141e-03, -1.143899e-03, -3.321029e-01],
          [ 0.,  0.,  0.,  1.0] ])
Tr_velo_to_cam['2011_09_28'] = Tr_velo_to_cam_2011_09_28

R_cam_to_rect_2011_09_28 = np.eye(4)
R_cam_to_rect_2011_09_28[:3, :3] = R_rect_00['2011_09_28']
R_cam_to_rect['2011_09_28'] = R_cam_to_rect_2011_09_28

P_velo_to_img_2011_09_28 = np.dot(np.dot(P_rect_02['2011_09_28'], R_cam_to_rect['2011_09_28']), Tr_velo_to_cam['2011_09_28'])
P_velo_to_img['2011_09_28'] = P_velo_to_img_2011_09_28

focal_length['2011_09_28'] = 7.070493e+02

baseline_2011_09_28 = (P_rect_02['2011_09_28'][0,3] - \
            P_rect_03['2011_09_28'][0,3] + \
            P_rect_02['2011_09_28'][1,3] - \
            P_rect_03['2011_09_28'][1,3]) / P_rect_02['2011_09_28'][0,0]
baseline['2011_09_28'] = baseline_2011_09_28




# 2011_09_29

# 3x4 projection matrix after rectification
P_rect_00_2011_09_29 = np.array(
        [ [ 7.183351e+02, 0.000000e+00, 6.003891e+02, 0.000000e+00],
          [ 0.000000e+00, 7.183351e+02, 1.815122e+02, 0.000000e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00] ])
P_rect_00['2011_09_29'] = P_rect_00_2011_09_29

P_rect_01_2011_09_29 = np.array(
        [ [ 7.183351e+02, 0.000000e+00, 6.003891e+02, -3.858846e+02],
          [ 0.000000e+00, 7.183351e+02, 1.815122e+02, 0.000000e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00] ])
P_rect_01['2011_09_29'] = P_rect_01_2011_09_29

P_rect_02_2011_09_29 = np.array(
        [ [ 7.183351e+02, 0.000000e+00, 6.003891e+02, 4.450382e+01],
          [ 0.000000e+00, 7.183351e+02, 1.815122e+02, -5.951107e-01],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 2.616315e-03] ])
P_rect_02['2011_09_29'] = P_rect_02_2011_09_29

P_rect_03_2011_09_29 = np.array(
        [ [ 7.183351e+02, 0.000000e+00, 6.003891e+02, -3.363147e+02],
          [ 0.000000e+00, 7.183351e+02, 1.815122e+02, 3.159867e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 5.323834e-03] ])
P_rect_03['2011_09_29'] = P_rect_03_2011_09_29

# 3x3 rectifying rotation to make image planes co-planar
R_rect_00_2011_09_29 = np.array(
        [ [  9.999478e-01, 9.791707e-03, -2.925305e-03],
          [ -9.806939e-03, 9.999382e-01, -5.238719e-03],
          [  2.873828e-03, 5.267134e-03, 9.999820e-01] ])
R_rect_00['2011_09_29'] = R_rect_00_2011_09_29

# velodyne to cam
Tr_velo_to_cam_2011_09_29 = np.array(
        [ [ 7.755449e-03, -9.999694e-01, -1.014303e-03, -7.275538e-03],
          [ 2.294056e-03, 1.032122e-03, -9.999968e-01, -6.324057e-02],
          [ 9.999673e-01, 7.753097e-03, 2.301990e-03, -2.670414e-01],
          [ 0.,  0.,  0.,  1.0] ])
Tr_velo_to_cam['2011_09_29'] = Tr_velo_to_cam_2011_09_29

R_cam_to_rect_2011_09_29 = np.eye(4)
R_cam_to_rect_2011_09_29[:3, :3] = R_rect_00['2011_09_29']
R_cam_to_rect['2011_09_29'] = R_cam_to_rect_2011_09_29

P_velo_to_img_2011_09_29 = np.dot(np.dot(P_rect_02['2011_09_29'], R_cam_to_rect['2011_09_29']), Tr_velo_to_cam['2011_09_29'])
P_velo_to_img['2011_09_29'] = P_velo_to_img_2011_09_29

focal_length['2011_09_29'] = 7.183351e+02

baseline_2011_09_29 = (P_rect_02['2011_09_29'][0,3] - \
            P_rect_03['2011_09_29'][0,3] + \
            P_rect_02['2011_09_29'][1,3] - \
            P_rect_03['2011_09_29'][1,3]) / P_rect_02['2011_09_29'][0,0]
baseline['2011_09_29'] = baseline_2011_09_29




# 2011_10_03

# 3x4 projection matrix after rectification
P_rect_00_2011_10_03 = np.array(
        [ [ 7.188560e+02, 0.000000e+00, 6.071928e+02, 0.000000e+00],
          [ 0.000000e+00, 7.188560e+02, 1.852157e+02, 0.000000e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00] ])
P_rect_00['2011_10_03'] = P_rect_00_2011_10_03

P_rect_01_2011_10_03 = np.array(
        [ [ 7.188560e+02, 0.000000e+00, 6.071928e+02, -3.861448e+02],
          [ 0.000000e+00, 7.188560e+02, 1.852157e+02, 0.000000e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00] ])
P_rect_01['2011_10_03'] = P_rect_01_2011_10_03

P_rect_02_2011_10_03 = np.array(
        [ [ 7.188560e+02, 0.000000e+00, 6.071928e+02, 4.538225e+01],
          [ 0.000000e+00, 7.188560e+02, 1.852157e+02, -1.130887e-01],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 3.779761e-03] ])
P_rect_02['2011_10_03'] = P_rect_02_2011_10_03

P_rect_03_2011_10_03 = np.array(
        [ [ 7.188560e+02, 0.000000e+00, 6.071928e+02, -3.372877e+02],
          [ 0.000000e+00, 7.188560e+02, 1.852157e+02, 2.369057e+00],
          [ 0.000000e+00, 0.000000e+00, 1.000000e+00, 4.915215e-03] ])
P_rect_03['2011_10_03'] = P_rect_03_2011_10_03

# 3x3 rectifying rotation to make image planes co-planar
R_rect_00_2011_10_03 = np.array(
        [ [  9.999454e-01, 7.259129e-03, -7.519551e-03],
          [ -7.292213e-03, 9.999638e-01, -4.381729e-03],
          [  7.487471e-03, 4.436324e-03, 9.999621e-01] ])
R_rect_00['2011_10_03'] = R_rect_00_2011_10_03

# velodyne to cam
Tr_velo_to_cam_2011_10_03 = np.array(
        [ [ 7.967514e-03, -9.999679e-01, -8.462264e-04, -1.377769e-02],
          [ -2.771053e-03, 8.241710e-04, -9.999958e-01, -5.542117e-02],
          [ 9.999644e-01, 7.969825e-03, -2.764397e-03, -2.918589e-01],
          [ 0.,  0.,  0.,  1.0] ])
Tr_velo_to_cam['2011_10_03'] = Tr_velo_to_cam_2011_10_03

R_cam_to_rect_2011_10_03 = np.eye(4)
R_cam_to_rect_2011_10_03[:3, :3] = R_rect_00['2011_10_03']
R_cam_to_rect['2011_10_03'] = R_cam_to_rect_2011_10_03

P_velo_to_img_2011_10_03 = np.dot(np.dot(P_rect_02['2011_10_03'], R_cam_to_rect['2011_10_03']), Tr_velo_to_cam['2011_10_03'])
P_velo_to_img['2011_10_03'] = P_velo_to_img_2011_10_03

focal_length['2011_10_03'] = 7.188560e+02

baseline_2011_10_03 = (P_rect_02['2011_10_03'][0,3] - \
            P_rect_03['2011_10_03'][0,3] + \
            P_rect_02['2011_10_03'][1,3] - \
            P_rect_03['2011_10_03'][1,3]) / P_rect_02['2011_10_03'][0,0]
baseline['2011_10_03'] = baseline_2011_10_03





